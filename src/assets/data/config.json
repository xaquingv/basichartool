{
  "COLORS": [
    { "type": "all", "order": "4", "code": "#CD6155", "name": "red" },
    { "type": "all", "order": "3", "code": "#F7DC6F", "name": "yellow" },
    { "type": "all", "order": "2", "code": "#27AE60", "name": "green" },
    { "type": "all", "order": "1", "code": "#5DADE2", "name": "blue light" },
    { "type": "all", "order": "5", "code": "#1B4F72", "name": "blue dark" },
    { "type": "all", "order": "6", "code": "#dfdfdf", "name": "grey 5" },
    { "type": "all", "order": "7", "code": "#bdbdbd", "name": "grey 3" },
    { "type": "all", "order": "8", "code": "#808080", "name": "grey 1.5" },
    { "type": "all", "order": "9", "code": "#9C640C", "name": "brown" },
    { "type": "all", "order": "10", "code": "#000000", "name": "custom color" },
    { "type": "barBackground", "order": "", "code": "#f1f1f1", "name": "grey 5-6" }
  ],
  "COLORSGRAY": [
    { "type": "all", "order": "4", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "3", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "2", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "1", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "5", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "6", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "7", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "8", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "9", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "all", "order": "10", "code": "#dfdfdf", "name": "grey 1.5" },
    { "type": "barBackground", "order": "", "code": "#f1f1f1", "name": "grey 5-6" }
  ],
  "CFG_CHARTS": [
    {
      "num": "1",
      "id": "bar",
      "row": "[2, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 1]",
      "number": "[1, 1]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": ""
    },
    {
      "num": "2",
      "id": "barGroup",
      "row": "[2, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 5]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "group"
    },
    {
      "num": "3",
      "id": "barGroupStack",
      "row": "[2, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": " ",
      "number_rangeType": "[-1, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "group, stack"
    },
    {
      "num": "4",
      "id": "barGroupStack100",
      "row": "[2, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": " ",
      "number_rangeType": "[1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "group, stack, 100%"
    },
    {
      "num": "6",
      "id": "onBarDiffArrow",
      "row": "[4, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 2]",
      "numberH_format": "date",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "false",
      "date_hasRepeat": " ",
      "date_max": " ",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "diff2, onBar"
    },
    {
      "num": "7",
      "id": "onBarDiffDots",
      "row": "[4, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 2]",
      "numberH_format": "string1",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "false",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "diff2, onBar"
    },
    {
      "num": "18a",
      "id": "slopegraph",
      "row": "[4, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 2]",
      "numberH_format": "date",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "false",
      "date_hasRepeat": " ",
      "date_max": " ",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "diff2?"
    },
    {
      "num": "18b",
      "id": "slopegraph",
      "row": "[4, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 2]",
      "numberH_format": "string1",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "false",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "diff2?"
    },
    {
      "num": "9a",
      "id": "col",
      "row": "[2, 10]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 1]",
      "number": "[1, 1]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": ""
    },
    {
      "num": "10a",
      "id": "colGroup",
      "row": "[2, 10]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "group"
    },
    {
      "num": "11a",
      "id": "colGroupStack",
      "row": "[2, 10]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "group, stack"
    },
    {
      "num": "9b",
      "id": "col",
      "row": "[2, 100]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 1]",
      "number": "[1, 1]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": "false",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": ""
    },
    {
      "num": "10b",
      "id": "colGroup",
      "row": "[2, 100]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": "false",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "group"
    },
    {
      "num": "11b",
      "id": "colGroupStack",
      "row": "[2, 100]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 1]",
      "number_hasNull": "",
      "date_hasRepeat": "false",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "group, stack"
    },
    {
      "num": "12",
      "id": "colGroupStack100",
      "row": "[2, 100]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[1]",
      "number_hasNull": "",
      "date_hasRepeat": "false",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "group, stack, 100%"
    },
    {
      "num": "5",
      "id": "bar100",
      "row": "[2, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 1]",
      "number": "[1, 1]",
      "numberH_format": "",
      "number_rangeType": "[1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "100%"
    },
    {
      "num": "17a",
      "id": "brokenBar100",
      "row": "[2, 10]",
      "date": "[0, 0]",
      "string1": "[1, 2]",
      "string2": "[0, 0]",
      "number": "[1, 1]",
      "numberH_format": "",
      "number_rangeType": "[1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "100%, breakdown"
    },
    {
      "num": "17b",
      "id": "brokenBar100",
      "row": "[1, 1]",
      "date": "[0, 0]",
      "string1": "[0, 1]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": "false",
      "string1_format": "",
      "active": "true",
      "key": "100%, breakdown"
    },
    {
      "num": "16",
      "id": "plotScatter",
      "row": "[10, Infinity]",
      "date": "[0, 0]",
      "string1": "[0, 1]",
      "string2": "[0, 2]",
      "number": "[2, 3]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "false",
      "date_hasRepeat": " ",
      "date_max": "200",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "plot"
    },
    {
      "num": "15a",
      "id": "plotDot",
      "row": "[20, Infinity]",
      "date": "[1, 1]",
      "string1": "[0, 2]",
      "string2": "[0, 2]",
      "number": "[1, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "100",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "plot"
    },
    {
      "num": "15b",
      "id": "plotDot",
      "row": "[20, Infinity]",
      "date": "[0, 0]",
      "string1": "[0, 2]",
      "string2": "[0, 2]",
      "number": "[3, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "100",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "false",
      "key": "plot"
    },
    {
      "num": "8a",
      "id": "onBarTicks",
      "row": "[2, 25]",
      "date": "[0, 0]",
      "string1": "[1, 1]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "100",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "plot, onBar"
    },
    {
      "num": "8b",
      "id": "onBarTicks",
      "row": "[2, 25]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "100",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": "plot, onBar"
    },
    {
      "num": "13a",
      "id": "lineDiscrete",
      "row": "[4, Infinity]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[1, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": ""
    },
    {
      "num": "13b",
      "id": "lineDiscrete",
      "row": "[25, Infinity]",
      "date": "[0, 0]",
      "string1": "[0, 1]",
      "string2": "[0, 0]",
      "number": "[1, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": " ",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": ""
    },
    {
      "num": "14a",
      "id": "lineContinue",
      "row": "[4, Infinity]",
      "date": "[1, 1]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[1, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": "false",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": ""
    },
    {
      "num": "14b",
      "id": "lineContinue",
      "row": "[20, Infinity]",
      "date": "[0, 0]",
      "string1": "[0, 0]",
      "string2": "[0, 0]",
      "number": "[2, 10]",
      "numberH_format": "",
      "number_rangeType": "[-1, 0, 1]",
      "number_hasNull": "",
      "date_hasRepeat": "false",
      "date_max": "",
      "string1_hasRepeat": " ",
      "string1_format": "",
      "active": "true",
      "key": ""
    }
  ],
  "CFG_CHART_DEF": [
    {
      "num": "1",
      "id": "bar",
      "name": "Bars",
      "data relationship / usage": "comparison of count, ranking",
      "description": "If you want to compare one variable across multiple categories, like income in different professions or rent in different London boroughs"
    },
    {
      "num": "2",
      "id": "barGroup",
      "name": "Grouped bars",
      "data relationship / usage": "comparison of count in categories",
      "description": "If you want to compare the value of a bunch variables across multiple categories, like age (the variables) distribution by region (the categories)"
    },
    {
      "num": "3",
      "id": "barGroupStack",
      "name": "Stacked bars",
      "data relationship / usage": "breakdown in categories",
      "description": "If you want to compare how several categories break down, like number of refugees coming to European countries by country of origin"
    },
    {
      "num": "4",
      "id": "barGroupStack100",
      "name": "Stacked percentage bars",
      "data relationship / usage": "proportional/breakdown",
      "description": "If the breakdown of your categories adds up to 100%, like the racial makeup of police departments"
    },
    {
      "num": "5",
      "id": "bar100",
      "name": "Percentage bars",
      "data relationship / usage": "proportional",
      "description": "If you want to compare percentages on several categories, like percentage of female CEOs by industry"
    },
    {
      "num": "",
      "id": "barDiff*",
      "name": "",
      "data relationship / usage": "diff b/n 1 positive and 1 negative sets",
      "description": ""
    },
    {
      "num": "6",
      "id": "onBarDiffArrow",
      "name": "Arrow chart",
      "data relationship / usage": "diff b/n 2 time points, ranking",
      "description": "If you want to show change in two points in time, like the change in female labour force in different professions from 1980 to today"
    },
    {
      "num": "7",
      "id": "onBarDiffDots",
      "name": "Dot difference chart",
      "data relationship / usage": "diff b/n 2 categories",
      "description": "..."
    },
    {
      "num": "8",
      "id": "onBarTicks",
      "name": "Ticks",
      "data relationship / usage": "comparison",
      "description": "..."
    },
    {
      "num": "",
      "id": "onBarStrip",
      "name": "Strip plot",
      "data relationship / usage": "distribution",
      "description": ""
    },
    {
      "num": "",
      "id": "onBarDots",
      "name": "",
      "data relationship / usage": "comparison",
      "description": ""
    },
    {
      "num": "9",
      "id": "col",
      "name": "Columns",
      "data relationship / usage": "comparison (over time)",
      "description": "Vertical version of a bar chart. One variable across multiple categories, like income in different professions or rent in different London boroughs\nor If you want to compare a variable over time, like the NHS budget"
    },
    {
      "num": "10",
      "id": "colGroup",
      "name": "Grouped columns",
      "data relationship / usage": "comparison (over time)",
      "description": "Vertical version of grouped bars. A set variables across multiple categories, like age (the variables) distribution by region (the categories) \nor If you want to compare multiple variables over time"
    },
    {
      "num": "11",
      "id": "colGroupStack",
      "name": "Stacked columns",
      "data relationship / usage": "breakdown (over time)",
      "description": "Vertical version of stacked bars. How several categories break down, like number of refugees coming to European countries by country of origin\nor If you want to see the trend of something over time as well as its breakdown"
    },
    {
      "num": "12",
      "id": "colGroupStack100",
      "name": "Stacked percentage columns",
      "data relationship / usage": "change over time, ex. survey",
      "description": "If you want to see the evolution in the makeup of something, like in the percentage of females in tenure-track positions in academia"
    },
    {
      "num": "",
      "id": "colHistogram",
      "name": "",
      "data relationship / usage": "distribution, frequency over quantitative ranges",
      "description": ""
    },
    {
      "num": " ",
      "id": "areaGroupStack",
      "name": "Stacked area",
      "data relationship / usage": "change over time",
      "description": ""
    },
    {
      "num": "13",
      "id": "lineContinue",
      "name": "Line",
      "data relationship / usage": "trend/change over time, distribution",
      "description": "If you want to see a trend over time. If you have missing data, it will show the gaps"
    },
    {
      "num": "14",
      "id": "lineDiscrete",
      "name": "Discrete line",
      "data relationship / usage": "trend/change over time",
      "description": "If you want to see trend over time, you may be missing dates but you want a continuous evenly spaced line, like in a stock chart"
    },
    {
      "num": "15",
      "id": "plotDot",
      "name": "Dot plot",
      "data relationship / usage": "trend/change (over time), distribution",
      "description": "If you want to see the trend of a set of categories that only have discrete values over time, like vote percentages per party on individual polls"
    },
    {
      "num": "16",
      "id": "plotScatter",
      "name": "Scatter plot",
      "data relationship / usage": "correlation within 2 categories",
      "description": "If you want to show the correlation between two different variables, like percent voting Trump and percent of college graduates by county"
    },
    {
      "num": " ",
      "id": "geoChoropleth",
      "name": "Choropleth map",
      "data relationship / usage": "spatial",
      "description": "If you want to see the geographic variation of a variable that comes in percentages, like poverty level. Warning! \nDoes it look like a population density map? If so, talk to the Data team or Visuals."
    },
    {
      "num": " ",
      "id": "geoBubble",
      "name": "Bubble map",
      "data relationship / usage": "spatial",
      "description": "If you want to compare the value and the geographic variation of a variable, like number of people in death row of Warning! \nDoes it look like a population density map? If so, talk to the Data team or Visuals."
    },
    {
      "num": "17",
      "id": "brokenBar100",
      "name": "Single broken bar",
      "data relationship / usage": "proportional/breakdown",
      "description": ""
    },
    {
      "num": " ",
      "id": "donut",
      "name": "Donut",
      "data relationship / usage": "proportional/breakdown",
      "description": ""
    },
    {
      "num": "18",
      "id": "slopegraph",
      "name": "Slopegraph",
      "data relationship / usage": "diff b/n 2, ranking",
      "description": "If you want to compare the before and after of a set of categories, like unemployment data in EU countries pre and post financial crisis"
    }
  ]
}
